#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoords;
layout (location = 2) in vec3 aNormal;
layout (location = 3) in vec3 aTangent;
layout (location = 4) in vec3 aBitangent; 

out vec3 FragPos;
out vec2 TexCoords;
out vec3 Normal;
out mat3 TBN;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main() {
    vec4 worldPos = vec4(aPos, 1.0) * model;
    FragPos = worldPos.xyz; 
    TexCoords = aTexCoords;
    
    mat3 normal_matrix = transpose(inverse(mat3(model)));
    Normal = aNormal * normal_matrix;

    vec3 T = normalize(vec3(vec4(aTangent,   0.0) * model));
	vec3 B = normalize(vec3(vec4(aBitangent, 0.0) * model));
	vec3 N = normalize(vec3(vec4(aNormal,    0.0) * model));
	TBN = mat3(T, B, N);

    gl_Position = worldPos * view * projection;
}